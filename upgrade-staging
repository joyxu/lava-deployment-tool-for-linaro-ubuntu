#!/bin/bash

# 1. Make virtualenv
# 2. Patch pip in virtualenv
# 3. Install bzrlib in virtualenv.
# 4. Activate virtualenv
# 5. Make bundle in virtualenv using requirements/requirements-trunk.txt
# 6. Deactivate virtualenv
# 7. Optionally run l-d-t preview and ask for confirmation
# 8. Run l-d-t upgrade with bundle made in step 5.

set -uxe

allow-badness () {
    set +uxe;
    "$@";
    set -uxe;
}

TARGET_INSTANCE="${1:-staging}"

LAVA_ROOT=/srv/lava

LDT_DIR="$(dirname $(readlink -f $0))"
SOURCE_REQUIREMENTS="${LDT_DIR}/requirements/requirements-latest.txt"
LDT="${LDT_DIR}/lava-deployment-tool"

SCRATCH_DIR="$(mktemp -d)"

trap "rm -rf \"${SCRATCH_DIR}\"" EXIT

VENV="${SCRATCH_DIR}/env"
BUNDLE="${SCRATCH_DIR}/lava.pybundle"
REQS="${SCRATCH_DIR}/requirements.txt"

virtualenv "${VENV}"

allow-badness . "${VENV}/bin/activate"

# pip is kinda stupid around caching and won't realize that it has
# downloaded a tarball if you let it save the results of this download
# to the cache.
unset PIP_DOWNLOAD_CACHE
pip install -q -I https://github.com/zyga/pip/tarball/develop
export PIP_DOWNLOAD_CACHE=$LAVA_ROOT/.downloads

pip install -q bzr

while read line
do
    echo "-e bzr+lp:$line#egg=$line"
done < "${SOURCE_REQUIREMENTS}" > "${REQS}"

"${LDT}" bundle "${REQS}" "${BUNDLE}"

allow-badness deactivate

"${LDT}" preview "${TARGET_INSTANCE}" "${BUNDLE}"

#"${LDT}" upgrade "${TARGET_INSTANCE}" "${BUNDLE}"
