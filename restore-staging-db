#!/bin/bash

set -eu

ldt="$(dirname $(readlink -f $0))/lava-deployment-tool"
inst=/srv/lava/instances/dev

# 1. stop instance

#sudo stop lava-instance LAVA_INSTANCE=staging

# 2. restore db from production/latest

#"${ldt}" restore-db production/latest

# 3. run migrations

#"${inst}/bin/lava-server" manage syncdb --noinput
#"${inst}/bin/lava-server" manage migrate --noinput

# 4. mark all running and submitted jobs as canceled.

. "${inst}/instance.conf"
export PGPASSWORD="$LAVA_DB_PASSWORD"
export PGUSER="$LAVA_DB_USER"

psql () {
 echo '>' psql -h localhost -d "${LAVA_DB_NAME}" "$@"
 command psql -h localhost -d "${LAVA_DB_NAME}" "$@"
}

psql -c 'update lava_scheduler_app_testjob set status = 4 where status in (1, 2, 5)'

# 5. set all boards to retired

psql -c 'update lava_scheduler_app_device set current_job_id = null, status = 4'

# 6. edit health jobs to submit to staging

# sounds difficult :(

# 7. set devices staging knows about to online

where_clause=$(
    ls $inst/etc/lava-dispatcher/devices |
    sed -ne 's/^\([a-z0-9]\+\)\.conf$/\1/p' |
python -c '
import sys
devices = list(sys.stdin)
if not devices:
    print "false"
else:
    print "hostname in (" + ",".join(["\x27" + d.strip() + "\x27" for d in devices]) + ")"')

psql -c "update lava_scheduler_app_device set status = 1, health_status = 0 where $where_clause"

# 8. start instance

#sudo start lava-instance LAVA_INSTANCE=staging
